{"name":"Eclipse Test Integration \"2.0\"","tagline":"Unofficial fork of Eclipse JDT JUnit plugin. This fork aims to provide a better visual experience of failed test results.","body":"# Features\r\n\r\nCurrently there are implemented 2 features \r\n\r\n* Showing ignored / skipped tests in Eclipse View\r\n* Showing nice comparison messages for some assertj failures.\r\n\r\n\r\n### How to try it?\r\n\r\n1. Clone the source code from \r\n\r\n   https://github.com/azachar/assertj-core/tree/1_6_0_dev_fork_DescriptiveAssertionException\r\n\r\n2. Compile assertj-core 1.6.0-snapshost by \r\n\r\n   mvn clean install\r\n\r\n3. Clone the source code of the patched Eclipse plugins from \r\n  \r\n   https://github.com/azachar/org.eclipse.jdt.ui from the default branch (R4_3_1_all-features-merged)\r\n  \r\n   \r\n4. Ensure that you are running Eclipse PDE Kepler SR-1.\r\n\r\n   Import the following projects into your workspace \r\n   \r\n      org.eclipse.jdt.ui/org.eclipse.jdt.junit\r\n   \r\n      org.eclipse.jdt.ui/org.eclipse.jdt.junit.core\r\n   \r\n      org.eclipse.jdt.ui/org.eclipse.jdt.junit4.runtime\r\n   \r\n   Install these 3 plugins into your Eclipse Kepler by\r\n\r\n   a) Select the mentioned projects above and from the context menu choose Export -> Deployable plug-ins and fragments \r\n\r\n   b) Choose Install into host. Repository\r\n \r\n   c) Press Finish button and wait until it will be installed into your Eclipse Workspace Only (which enables you to test it).\r\n   \r\n\r\n4. Use assertJ's assertThat(a).isEqualToComparingFieldByField(b)\r\n   or simply import to your Eclipse this sample project and run as your junit project within your Eclipse.\r\n\r\n   https://github.com/azachar/assertj-core/tree/1_6_0_dev_fork_DescriptiveAssertionException/example\r\n\r\n\r\nNow you are able to see the nice comparison of failed fields in your junit view called \"Bug Trace\" that shows a quick overview of failed tests elements.\r\n\r\nAlso in the stacktrace for some assertj exception (initially for comparison field by field of two objects) you click on the first line in the stacktrace of your failed test to open \"visual\" comparision.\r\n\r\n\r\n### Beta\r\nIn the branch https://github.com/azachar/org.eclipse.jdt.ui/tree/R4_3_1-bug-trace-beta you can find the latest release of the pretty diff based visualization of failures. \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}